_ps=function(){function e(e,s="validate"){const t="parseSiweMessage: ";if("string"!=typeof e)throw new Error(`${t} invalid input msg: message must be of type string`);const r=new i,n=new o;function p(e,s="unknown"){if(!r.parse(n,"date-time",e).success||isNaN(Date.parse(e)))throw new Error(`${t}invalid date time: ${s} not date time string format: ${e}`)}function h(e){const s=parseInt(e,10);if(isNaN(s))throw new Error(`${t}invalid integer: not a number: ${e}`);if(s===1/0)throw new Error(`${t}invalid integer: Infinity: ${e}`);return s}function l(e){return u=r.parse(n,"uri",e,{}),u.success}r.callbacks.ffscheme=d.ffscheme,r.callbacks.fdomain=d.fdomain,r.callbacks.faddress=d.faddress,r.callbacks.fstatement=d.fstatement,r.callbacks.furi=d.furi,r.callbacks.fnonce=d.fnonce,r.callbacks.fversion=d.fversion,r.callbacks["fchain-id"]=d.fchainId,r.callbacks["fissued-at"]=d.fissuedAt,r.callbacks["fexpiration-time"]=d.fexpirationTime,r.callbacks["fnot-before"]=d.fnotBefore,r.callbacks["frequest-id"]=d.frequestId,r.callbacks.fresources=d.fresources,r.callbacks.fresource=d.fresource,r.callbacks["empty-statement"]=d.emptyStatement,r.callbacks["no-statement"]=d.noStatement,r.callbacks["actual-statement"]=d.actualStatment,r.callbacks["pre-uri"]=d.preUri,r.callbacks["pre-version"]=d.preVersion,r.callbacks["pre-chain-id"]=d.preChainId,r.callbacks["pre-nonce"]=d.preNonce,r.callbacks["pre-issued-at"]=d.preIssuedAt,r.callbacks.uri=d.URI,r.callbacks.scheme=d.scheme,r.callbacks["userinfo-at"]=d.userinfo,r.callbacks.host=d.host,r.callbacks["IP-literal"]=d.ipLiteral,r.callbacks.port=d.port,r.callbacks["path-abempty"]=d.pathAbempty,r.callbacks["path-absolute"]=d.pathAbsolute,r.callbacks["path-rootless"]=d.pathRootless,r.callbacks["path-empty"]=d.pathEmpty,r.callbacks.query=d.query,r.callbacks.fragment=d.fragment,r.callbacks.IPv4address=d.ipv4,r.callbacks.nodcolon=d.nodcolon,r.callbacks.dcolon=d.dcolon,r.callbacks.h16=d.h16,r.callbacks.h16c=d.h16,r.callbacks.h16n=d.h16,r.callbacks.h16cn=d.h16,r.callbacks["dec-octet"]=d.decOctet,r.callbacks["dec-digit"]=d.decDigit;let u,m={error:!1};if(u=r.parse(n,"siwe-first-pass",e,m),m.error)throw new Error(`${t}invalid siwe message: ${m.error}`);if(!u.success)throw new Error(`${t}invalid siwe message: carefully check message syntax, especially after required "Issued At: "\n${JSON.stringify(u)}`);if(m.fscheme&&(u=r.parse(n,"scheme",m.fscheme,{}),!u.success))throw new Error(`${t}invalid scheme: ${m.fscheme}`);if(u=r.parse(n,"authority",m.fdomain,{}),!u.success)throw new Error(`${t}invalid domain: ${m.fdomain}`);if(u=r.parse(n,"address",m.faddress),!u.success)throw new Error(`${t}invalid address: ${m.faddress}`);if("validate"==s){if(!c(m.faddress))throw new Error(`${t}invalid ERC-55 format address: 'validate' specified, MUST be ERC55-conformant: ${m.faddress}`)}else"convert"===s&&(m.faddress=a(m.faddress));if(void 0!==m.fstatement&&""!==m.fstatement&&(u=r.parse(n,"statement",m.fstatement),!u.success))throw new Error(`${t}invalid statement: ${m.fstatement}`);if(!l(m.furi))throw new Error(`${t}invalid URI: ${m.furi}`);if(u=r.parse(n,"version",m.fversion),!u.success)throw new Error(`${t}invalid Version: ${m.fversion}`);if(m.fversion=h(m.fversion),u=r.parse(n,"chain-id",m.fchainId),!u.success)throw new Error(`${t}invalid Chain ID: ${m.fchainId}`);if(m.fchainId=h(m.fchainId),u=r.parse(n,"nonce",m.fnonce),!u.success)throw new Error(`${t}invalid Nonce: ${m.fnonce}`);if(p(m.fissuedAt,"Issued At"),m.fexpirationTime&&p(m.fexpirationTime,"Expiration Time"),m.fnotBefore&&p(m.fnotBefore,"Not Before"),void 0!==m.frequestId&&""!==m.frequestId&&(u=r.parse(n,"request-id",m.frequestId),!u.success))throw new Error(`${t}invalid Request ID: i${m.frequestId}`);if(m.fresources&&m.fresources.length)for(let e=0;e<m.fresources.length;e++)if(!l(m.fresources[e]))throw new Error(`${t}invalid resource URI [${e}]: ${m.fresources[e]}`);const f={};if(f.scheme=m.fscheme,f.domain=m.fdomain,f.address=m.faddress,f.statement=m.fstatement,f.uri=m.furi,f.version=m.fversion,f.chainId=m.fchainId,f.nonce=m.fnonce,f.issuedAt=m.fissuedAt,f.expirationTime=m.fexpirationTime,f.notBefore=m.fnotBefore,f.requestId=m.frequestId,f.resources=void 0,m.fresources){f.resources=[];for(let e=0;e<m.fresources.length;e++)f.resources.push(m.fresources[e])}return f}function s(e){const s=new i,t=new o,r={};s.callbacks.uri=d.URI,s.callbacks.scheme=d.scheme,s.callbacks["userinfo-at"]=d.userinfo,s.callbacks.host=d.host,s.callbacks["IP-literal"]=d.ipLiteral,s.callbacks.port=d.port,s.callbacks["path-abempty"]=d.pathAbempty,s.callbacks["path-absolute"]=d.pathAbsolute,s.callbacks["path-rootless"]=d.pathRootless,s.callbacks["path-empty"]=d.pathEmpty,s.callbacks.query=d.query,s.callbacks.fragment=d.fragment,s.callbacks.IPv4address=d.ipv4,s.callbacks.nodcolon=d.nodcolon,s.callbacks.dcolon=d.dcolon,s.callbacks.h16=d.h16,s.callbacks.h16c=d.h16,s.callbacks.h16n=d.h16,s.callbacks.h16cn=d.h16,s.callbacks["dec-octet"]=d.decOctet,s.callbacks["dec-digit"]=d.decDigit;if(!s.parse(t,"uri",e,r).success)return!1;return{uri:r.uri,scheme:r.scheme,userinfo:r.userinfo,host:r.host,port:r.port,path:r.path,query:r.query,fragment:r.fragment}}function t(e){let s="";if(e.scheme&&""!==e.scheme&&(s+=`${e.scheme}://`),e.domain&&""!==e.domain&&(s+=e.domain),s+=" wants you to sign in with your Ethereum account:\n",e.address&&""!==e.address&&(s+=`${e.address}\n`),s+="\n",void 0!==e.statement&&(s+=`${e.statement}\n`),s+="\n",e.uri&&""!==e.uri&&(s+=`URI: ${e.uri}\n`),e.version&&""!==e.version&&(s+=`Version: ${e.version}\n`),e.chainId&&""!==e.chainId&&(s+=`Chain ID: ${e.chainId}\n`),e.nonce&&""!==e.nonce&&(s+=`Nonce: ${e.nonce}\n`),e.issuedAt&&""!==e.issuedAt&&(s+=`Issued At: ${e.issuedAt}`),e.expirationTime&&""!==e.expirationTime&&(s+=`\nExpiration Time: ${e.expirationTime}`),e.notBefore&&""!==e.notBefore&&(s+=`\nNot Before: ${e.notBefore}`),void 0!==e.requestId&&(s+=`\nRequest ID: ${e.requestId}`),e.resources&&(s+="\nResources:",Array.isArray(e.resources)))for(let t=0;t<e.resources.length;t++)s+=`\n- ${e.resources[t]}`;return s}const i=function(){const e=n,s=r,t=this,i="parser.js: Parser(): ";t.ast=void 0,t.stats=void 0,t.trace=void 0,t.callbacks=[];let o,d,a,c,p,h,l,u=0,m=0,f=0,y=0,g=0,x=new function(){this.state=e.ACTIVE,this.phraseLength=0,this.refresh=()=>{this.state=e.ACTIVE,this.phraseLength=0}};t.parse=(r,n,T,w)=>{const b=`${i}parse(): `;u=0,m=0,f=0,y=0,g=0,o=void 0,d=void 0,a=void 0,c=void 0,x.refresh(),p=void 0,h=void 0,l=void 0,c=s.stringToChars(T),o=r.rules,d=r.udts;const v=n.toLowerCase();let A;for(const e in o)if(o.hasOwnProperty(e)&&v===o[e].lower){A=o[e].index;break}if(void 0===A)throw new Error(`${b}start rule name '${startRule}' not recognized`);(()=>{const e=`${i}initializeCallbacks(): `;let s,r;for(p=[],h=[],s=0;s<o.length;s+=1)p[s]=void 0;for(s=0;s<d.length;s+=1)h[s]=void 0;const n=[];for(s=0;s<o.length;s+=1)n.push(o[s].lower);for(s=0;s<d.length;s+=1)n.push(d[s].lower);for(const i in t.callbacks)if(t.callbacks.hasOwnProperty(i)){if(s=n.indexOf(i.toLowerCase()),s<0)throw new Error(`${e}syntax callback '${i}' not a rule or udt name`);if(r=t.callbacks[i]?t.callbacks[i]:void 0,"function"!=typeof r&&void 0!==r)throw new Error(`${e}syntax callback[${i}] must be function reference or falsy)`);s<o.length?p[s]=r:h[s-o.length]=r}})(),t.trace&&t.trace.init(o,d,c),t.stats&&t.stats.init(o,d),t.ast&&t.ast.init(o,d,c),l=w,a=[{type:e.RNM,index:A}],k(0,0),a=void 0;let I=!1;switch(x.state){case e.ACTIVE:throw new Error(`${b}final state should never be 'ACTIVE'`);case e.NOMATCH:I=!1;break;case e.EMPTY:case e.MATCH:I=x.phraseLength===c.length;break;default:throw new Error("unrecognized state")}return{success:I,state:x.state,stateName:e.idName(x.state),length:c.length,matched:x.phraseLength,maxMatched:g,maxTreeDepth:f,nodeHits:y}};const T=(s,t,r,n)=>{if(t.phraseLength>r){let e=`${i}opRNM(${s.name}): callback function error: `;throw e+=`sysData.phraseLength: ${t.phraseLength}`,e+=` must be <= remaining chars: ${r}`,new Error(e)}switch(t.state){case e.ACTIVE:if(!n)throw new Error(`${i}opRNM(${s.name}): callback function return error. ACTIVE state not allowed.`);break;case e.EMPTY:t.phraseLength=0;break;case e.MATCH:0===t.phraseLength&&(t.state=e.EMPTY);break;case e.NOMATCH:t.phraseLength=0;break;default:throw new Error(`${i}opRNM(${s.name}): callback function return error. Unrecognized return state: ${t.state}`)}},w=(s,r)=>{let n,p,m;const f=a[s],y=d[f.index];x.UdtIndex=y.index,u||(m=t.ast&&t.ast.udtDefined(f.index),m&&(p=o.length+f.index,n=t.ast.getLength(),t.ast.down(p,y.name)));const g=c.length-r;h[f.index](x,c,r,l),((s,t,r)=>{if(t.phraseLength>r){let e=`${i}opUDT(${s.name}): callback function error: `;throw e+=`sysData.phraseLength: ${t.phraseLength}`,e+=` must be <= remaining chars: ${r}`,new Error(e)}switch(t.state){case e.ACTIVE:throw new Error(`${i}opUDT(${s.name}) ACTIVE state return not allowed.`);case e.EMPTY:if(!s.empty)throw new Error(`${i}opUDT(${s.name}) may not return EMPTY.`);t.phraseLength=0;break;case e.MATCH:if(0===t.phraseLength){if(!s.empty)throw new Error(`${i}opUDT(${s.name}) may not return EMPTY.`);t.state=e.EMPTY}break;case e.NOMATCH:t.phraseLength=0;break;default:throw new Error(`${i}opUDT(${s.name}): callback function return error. Unrecognized return state: ${t.state}`)}})(y,x,g),u||m&&(x.state===e.NOMATCH?t.ast.setLength(n):t.ast.up(p,y.name,r,x.phraseLength))},k=(s,r)=>{const n=`${i}opExecute(): `,d=a[s];switch(y+=1,m>f&&(f=m),m+=1,x.refresh(),t.trace&&t.trace.down(d,r),d.type){case e.ALT:((s,t)=>{const i=a[s];for(let s=0;s<i.children.length&&(k(i.children[s],t),x.state===e.NOMATCH);s+=1);})(s,r);break;case e.CAT:((s,i)=>{let r,n,o,d;const c=a[s];t.ast&&(n=t.ast.getLength()),r=!0,o=i,d=0;for(let s=0;s<c.children.length;s+=1){if(k(c.children[s],o),x.state===e.NOMATCH){r=!1;break}o+=x.phraseLength,d+=x.phraseLength}r?(x.state=0===d?e.EMPTY:e.MATCH,x.phraseLength=d):(x.state=e.NOMATCH,x.phraseLength=0,t.ast&&t.ast.setLength(n))})(s,r);break;case e.REP:((s,i)=>{let r,n,o,d;const p=a[s];if(0===p.max)return x.state=e.EMPTY,void(x.phraseLength=0);for(n=i,o=0,d=0,t.ast&&(r=t.ast.getLength());!(n>=c.length)&&(k(s+1,n),x.state!==e.NOMATCH)&&x.state!==e.EMPTY&&(d+=1,o+=x.phraseLength,n+=x.phraseLength,d!==p.max););x.state===e.EMPTY||d>=p.min?(x.state=0===o?e.EMPTY:e.MATCH,x.phraseLength=o):(x.state=e.NOMATCH,x.phraseLength=0,t.ast&&t.ast.setLength(r))})(s,r);break;case e.RNM:((s,i)=>{let r,n,d;const h=a[s],m=o[h.index],f=p[m.index];if(u||(n=t.ast&&t.ast.ruleDefined(h.index),n&&(r=t.ast.getLength(),t.ast.down(h.index,o[h.index].name))),f){const s=c.length-i;f(x,c,i,l),T(m,x,s,!0),x.state===e.ACTIVE&&(d=a,a=m.opcodes,k(0,i),a=d,f(x,c,i,l),T(m,x,s,!1))}else d=a,a=m.opcodes,k(0,i,x),a=d;u||n&&(x.state===e.NOMATCH?t.ast.setLength(r):t.ast.up(h.index,m.name,i,x.phraseLength))})(s,r);break;case e.TRG:((s,t)=>{const i=a[s];x.state=e.NOMATCH,t<c.length&&i.min<=c[t]&&c[t]<=i.max&&(x.state=e.MATCH,x.phraseLength=1)})(s,r);break;case e.TBS:((s,t)=>{const i=a[s],r=i.string.length;if(x.state=e.NOMATCH,t+r<=c.length){for(let e=0;e<r;e+=1)if(c[t+e]!==i.string[e])return;x.state=e.MATCH,x.phraseLength=r}})(s,r);break;case e.TLS:((s,t)=>{let i;const r=a[s];x.state=e.NOMATCH;const n=r.string.length;if(0!==n){if(t+n<=c.length){for(let e=0;e<n;e+=1)if(i=c[t+e],i>=65&&i<=90&&(i+=32),i!==r.string[e])return;x.state=e.MATCH,x.phraseLength=n}}else x.state=e.EMPTY})(s,r);break;case e.UDT:w(s,r);break;case e.AND:((s,t)=>{switch(u+=1,k(s+1,t),u-=1,x.phraseLength=0,x.state){case e.EMPTY:case e.MATCH:x.state=e.EMPTY;break;case e.NOMATCH:x.state=e.NOMATCH;break;default:throw new Error(`opAND: invalid state ${x.state}`)}})(s,r);break;case e.NOT:((s,t)=>{switch(u+=1,k(s+1,t),u-=1,x.phraseLength=0,x.state){case e.EMPTY:case e.MATCH:x.state=e.NOMATCH;break;case e.NOMATCH:x.state=e.EMPTY;break;default:throw new Error(`opNOT: invalid state ${x.state}`)}})(s,r);break;default:throw new Error(`${n}unrecognized operator`)}u||r+x.phraseLength>g&&(g=r+x.phraseLength),t.stats&&t.stats.collect(d,x),t.trace&&t.trace.up(d,x.state,r,x.phraseLength),m-=1}},r={stringToChars:e=>[...e].map((e=>e.codePointAt(0))),charsToString:(e,s,t)=>{let i=e;for(;!(void 0===s||s<0);){if(void 0===t){i=e.slice(s);break}if(t<=0)return"";i=e.slice(s,s+t);break}return String.fromCodePoint(...i)}},n={ALT:1,CAT:2,REP:3,RNM:4,TRG:5,TBS:6,TLS:7,UDT:11,AND:12,NOT:13,ACTIVE:100,MATCH:101,EMPTY:102,NOMATCH:103,SEM_PRE:200,SEM_POST:201,SEM_OK:300,idName:e=>{switch(e){case n.ALT:return"ALT";case n.CAT:return"CAT";case n.REP:return"REP";case n.RNM:return"RNM";case n.TRG:return"TRG";case n.TBS:return"TBS";case n.TLS:return"TLS";case n.UDT:return"UDT";case n.AND:return"AND";case n.NOT:return"NOT";case n.ACTIVE:return"ACTIVE";case n.EMPTY:return"EMPTY";case n.MATCH:return"MATCH";case n.NOMATCH:return"NOMATCH";case n.SEM_PRE:return"SEM_PRE";case n.SEM_POST:return"SEM_POST";case n.SEM_OK:return"SEM_OK";default:return"UNRECOGNIZED STATE"}}};function o(){this.grammarObject="grammarObject",this.rules=[],this.rules[0]={name:"siwe-first-pass",lower:"siwe-first-pass",index:0,isBkr:!1},this.rules[1]={name:"pre-uri",lower:"pre-uri",index:1,isBkr:!1},this.rules[2]={name:"pre-version",lower:"pre-version",index:2,isBkr:!1},this.rules[3]={name:"pre-chain-id",lower:"pre-chain-id",index:3,isBkr:!1},this.rules[4]={name:"pre-nonce",lower:"pre-nonce",index:4,isBkr:!1},this.rules[5]={name:"pre-issued-at",lower:"pre-issued-at",index:5,isBkr:!1},this.rules[6]={name:"ffscheme",lower:"ffscheme",index:6,isBkr:!1},this.rules[7]={name:"fdomain",lower:"fdomain",index:7,isBkr:!1},this.rules[8]={name:"fissued-at",lower:"fissued-at",index:8,isBkr:!1},this.rules[9]={name:"fexpiration-time",lower:"fexpiration-time",index:9,isBkr:!1},this.rules[10]={name:"fnot-before",lower:"fnot-before",index:10,isBkr:!1},this.rules[11]={name:"furi",lower:"furi",index:11,isBkr:!1},this.rules[12]={name:"fscheme",lower:"fscheme",index:12,isBkr:!1},this.rules[13]={name:"faddress",lower:"faddress",index:13,isBkr:!1},this.rules[14]={name:"fstatement",lower:"fstatement",index:14,isBkr:!1},this.rules[15]={name:"fversion",lower:"fversion",index:15,isBkr:!1},this.rules[16]={name:"fchain-id",lower:"fchain-id",index:16,isBkr:!1},this.rules[17]={name:"fnonce",lower:"fnonce",index:17,isBkr:!1},this.rules[18]={name:"frequest-id",lower:"frequest-id",index:18,isBkr:!1},this.rules[19]={name:"fresources",lower:"fresources",index:19,isBkr:!1},this.rules[20]={name:"fresource",lower:"fresource",index:20,isBkr:!1},this.rules[21]={name:"no-statement",lower:"no-statement",index:21,isBkr:!1},this.rules[22]={name:"empty-statement",lower:"empty-statement",index:22,isBkr:!1},this.rules[23]={name:"actual-statement",lower:"actual-statement",index:23,isBkr:!1},this.rules[24]={name:"domain",lower:"domain",index:24,isBkr:!1},this.rules[25]={name:"address",lower:"address",index:25,isBkr:!1},this.rules[26]={name:"statement",lower:"statement",index:26,isBkr:!1},this.rules[27]={name:"version",lower:"version",index:27,isBkr:!1},this.rules[28]={name:"chain-id",lower:"chain-id",index:28,isBkr:!1},this.rules[29]={name:"nonce",lower:"nonce",index:29,isBkr:!1},this.rules[30]={name:"issued-at",lower:"issued-at",index:30,isBkr:!1},this.rules[31]={name:"expiration-time",lower:"expiration-time",index:31,isBkr:!1},this.rules[32]={name:"not-before",lower:"not-before",index:32,isBkr:!1},this.rules[33]={name:"request-id",lower:"request-id",index:33,isBkr:!1},this.rules[34]={name:"resources",lower:"resources",index:34,isBkr:!1},this.rules[35]={name:"resource",lower:"resource",index:35,isBkr:!1},this.rules[36]={name:"date-fullyear",lower:"date-fullyear",index:36,isBkr:!1},this.rules[37]={name:"date-month",lower:"date-month",index:37,isBkr:!1},this.rules[38]={name:"date-mday",lower:"date-mday",index:38,isBkr:!1},this.rules[39]={name:"time-hour",lower:"time-hour",index:39,isBkr:!1},this.rules[40]={name:"time-minute",lower:"time-minute",index:40,isBkr:!1},this.rules[41]={name:"time-second",lower:"time-second",index:41,isBkr:!1},this.rules[42]={name:"time-secfrac",lower:"time-secfrac",index:42,isBkr:!1},this.rules[43]={name:"time-numoffset",lower:"time-numoffset",index:43,isBkr:!1},this.rules[44]={name:"time-offset",lower:"time-offset",index:44,isBkr:!1},this.rules[45]={name:"partial-time",lower:"partial-time",index:45,isBkr:!1},this.rules[46]={name:"full-date",lower:"full-date",index:46,isBkr:!1},this.rules[47]={name:"full-time",lower:"full-time",index:47,isBkr:!1},this.rules[48]={name:"date-time",lower:"date-time",index:48,isBkr:!1},this.rules[49]={name:"URI",lower:"uri",index:49,isBkr:!1},this.rules[50]={name:"hier-part",lower:"hier-part",index:50,isBkr:!1},this.rules[51]={name:"authority",lower:"authority",index:51,isBkr:!1},this.rules[52]={name:"path-abempty",lower:"path-abempty",index:52,isBkr:!1},this.rules[53]={name:"path-absolute",lower:"path-absolute",index:53,isBkr:!1},this.rules[54]={name:"path-rootless",lower:"path-rootless",index:54,isBkr:!1},this.rules[55]={name:"path-empty",lower:"path-empty",index:55,isBkr:!1},this.rules[56]={name:"userinfo-at",lower:"userinfo-at",index:56,isBkr:!1},this.rules[57]={name:"userinfo",lower:"userinfo",index:57,isBkr:!1},this.rules[58]={name:"host",lower:"host",index:58,isBkr:!1},this.rules[59]={name:"IP-literal",lower:"ip-literal",index:59,isBkr:!1},this.rules[60]={name:"IPvFuture",lower:"ipvfuture",index:60,isBkr:!1},this.rules[61]={name:"IPv6address",lower:"ipv6address",index:61,isBkr:!1},this.rules[62]={name:"nodcolon",lower:"nodcolon",index:62,isBkr:!1},this.rules[63]={name:"dcolon",lower:"dcolon",index:63,isBkr:!1},this.rules[64]={name:"h16",lower:"h16",index:64,isBkr:!1},this.rules[65]={name:"h16c",lower:"h16c",index:65,isBkr:!1},this.rules[66]={name:"h16n",lower:"h16n",index:66,isBkr:!1},this.rules[67]={name:"h16cn",lower:"h16cn",index:67,isBkr:!1},this.rules[68]={name:"IPv4address",lower:"ipv4address",index:68,isBkr:!1},this.rules[69]={name:"dec-octet",lower:"dec-octet",index:69,isBkr:!1},this.rules[70]={name:"dec-digit",lower:"dec-digit",index:70,isBkr:!1},this.rules[71]={name:"reg-name",lower:"reg-name",index:71,isBkr:!1},this.rules[72]={name:"reg-name-char",lower:"reg-name-char",index:72,isBkr:!1},this.rules[73]={name:"port",lower:"port",index:73,isBkr:!1},this.rules[74]={name:"query",lower:"query",index:74,isBkr:!1},this.rules[75]={name:"fragment",lower:"fragment",index:75,isBkr:!1},this.rules[76]={name:"segment",lower:"segment",index:76,isBkr:!1},this.rules[77]={name:"segment-nz",lower:"segment-nz",index:77,isBkr:!1},this.rules[78]={name:"scheme",lower:"scheme",index:78,isBkr:!1},this.rules[79]={name:"pchar",lower:"pchar",index:79,isBkr:!1},this.rules[80]={name:"pct-encoded",lower:"pct-encoded",index:80,isBkr:!1},this.rules[81]={name:"unreserved",lower:"unreserved",index:81,isBkr:!1},this.rules[82]={name:"reserved",lower:"reserved",index:82,isBkr:!1},this.udts=[],this.rules[0].opcodes=[],this.rules[0].opcodes[0]={type:2,children:[1,3,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,36,41]},this.rules[0].opcodes[1]={type:3,min:0,max:1},this.rules[0].opcodes[2]={type:4,index:6},this.rules[0].opcodes[3]={type:4,index:7},this.rules[0].opcodes[4]={type:6,string:[32,119,97,110,116,115,32,121,111,117,32,116,111,32,115,105,103,110,32,105,110,32,119,105,116,104,32,121,111,117,114,32,69,116,104,101,114,101,117,109,32,97,99,99,111,117,110,116,58]},this.rules[0].opcodes[5]={type:6,string:[10]},this.rules[0].opcodes[6]={type:4,index:13},this.rules[0].opcodes[7]={type:6,string:[10]},this.rules[0].opcodes[8]={type:1,children:[9,10,11]},this.rules[0].opcodes[9]={type:4,index:22},this.rules[0].opcodes[10]={type:4,index:21},this.rules[0].opcodes[11]={type:4,index:23},this.rules[0].opcodes[12]={type:4,index:1},this.rules[0].opcodes[13]={type:4,index:11},this.rules[0].opcodes[14]={type:6,string:[10]},this.rules[0].opcodes[15]={type:4,index:2},this.rules[0].opcodes[16]={type:4,index:15},this.rules[0].opcodes[17]={type:6,string:[10]},this.rules[0].opcodes[18]={type:4,index:3},this.rules[0].opcodes[19]={type:4,index:16},this.rules[0].opcodes[20]={type:6,string:[10]},this.rules[0].opcodes[21]={type:4,index:4},this.rules[0].opcodes[22]={type:4,index:17},this.rules[0].opcodes[23]={type:6,string:[10]},this.rules[0].opcodes[24]={type:4,index:5},this.rules[0].opcodes[25]={type:4,index:8},this.rules[0].opcodes[26]={type:3,min:0,max:1},this.rules[0].opcodes[27]={type:2,children:[28,29,30]},this.rules[0].opcodes[28]={type:6,string:[10]},this.rules[0].opcodes[29]={type:6,string:[69,120,112,105,114,97,116,105,111,110,32,84,105,109,101,58,32]},this.rules[0].opcodes[30]={type:4,index:9},this.rules[0].opcodes[31]={type:3,min:0,max:1},this.rules[0].opcodes[32]={type:2,children:[33,34,35]},this.rules[0].opcodes[33]={type:6,string:[10]},this.rules[0].opcodes[34]={type:6,string:[78,111,116,32,66,101,102,111,114,101,58,32]},this.rules[0].opcodes[35]={type:4,index:10},this.rules[0].opcodes[36]={type:3,min:0,max:1},this.rules[0].opcodes[37]={type:2,children:[38,39,40]},this.rules[0].opcodes[38]={type:6,string:[10]},this.rules[0].opcodes[39]={type:6,string:[82,101,113,117,101,115,116,32,73,68,58,32]},this.rules[0].opcodes[40]={type:4,index:18},this.rules[0].opcodes[41]={type:3,min:0,max:1},this.rules[0].opcodes[42]={type:2,children:[43,44,45]},this.rules[0].opcodes[43]={type:6,string:[10]},this.rules[0].opcodes[44]={type:6,string:[82,101,115,111,117,114,99,101,115,58]},this.rules[0].opcodes[45]={type:4,index:19},this.rules[1].opcodes=[],this.rules[1].opcodes[0]={type:6,string:[85,82,73,58,32]},this.rules[2].opcodes=[],this.rules[2].opcodes[0]={type:6,string:[86,101,114,115,105,111,110,58,32]},this.rules[3].opcodes=[],this.rules[3].opcodes[0]={type:6,string:[67,104,97,105,110,32,73,68,58,32]},this.rules[4].opcodes=[],this.rules[4].opcodes[0]={type:6,string:[78,111,110,99,101,58,32]},this.rules[5].opcodes=[],this.rules[5].opcodes[0]={type:6,string:[73,115,115,117,101,100,32,65,116,58,32]},this.rules[6].opcodes=[],this.rules[6].opcodes[0]={type:2,children:[1,2]},this.rules[6].opcodes[1]={type:4,index:12},this.rules[6].opcodes[2]={type:6,string:[58,47,47]},this.rules[7].opcodes=[],this.rules[7].opcodes[0]={type:3,min:1,max:1/0},this.rules[7].opcodes[1]={type:1,children:[2,3]},this.rules[7].opcodes[2]={type:5,min:0,max:31},this.rules[7].opcodes[3]={type:5,min:33,max:127},this.rules[8].opcodes=[],this.rules[8].opcodes[0]={type:3,min:1,max:1/0},this.rules[8].opcodes[1]={type:1,children:[2,3]},this.rules[8].opcodes[2]={type:5,min:0,max:9},this.rules[8].opcodes[3]={type:5,min:11,max:127},this.rules[9].opcodes=[],this.rules[9].opcodes[0]={type:3,min:1,max:1/0},this.rules[9].opcodes[1]={type:1,children:[2,3]},this.rules[9].opcodes[2]={type:5,min:0,max:9},this.rules[9].opcodes[3]={type:5,min:11,max:127},this.rules[10].opcodes=[],this.rules[10].opcodes[0]={type:3,min:1,max:1/0},this.rules[10].opcodes[1]={type:1,children:[2,3]},this.rules[10].opcodes[2]={type:5,min:0,max:9},this.rules[10].opcodes[3]={type:5,min:11,max:127},this.rules[11].opcodes=[],this.rules[11].opcodes[0]={type:3,min:1,max:1/0},this.rules[11].opcodes[1]={type:1,children:[2,3]},this.rules[11].opcodes[2]={type:5,min:0,max:9},this.rules[11].opcodes[3]={type:5,min:11,max:127},this.rules[12].opcodes=[],this.rules[12].opcodes[0]={type:3,min:1,max:1/0},this.rules[12].opcodes[1]={type:1,children:[2,3]},this.rules[12].opcodes[2]={type:5,min:0,max:57},this.rules[12].opcodes[3]={type:5,min:59,max:127},this.rules[13].opcodes=[],this.rules[13].opcodes[0]={type:3,min:1,max:1/0},this.rules[13].opcodes[1]={type:1,children:[2,3]},this.rules[13].opcodes[2]={type:5,min:0,max:9},this.rules[13].opcodes[3]={type:5,min:11,max:127},this.rules[14].opcodes=[],this.rules[14].opcodes[0]={type:3,min:1,max:1/0},this.rules[14].opcodes[1]={type:1,children:[2,3]},this.rules[14].opcodes[2]={type:5,min:0,max:9},this.rules[14].opcodes[3]={type:5,min:11,max:127},this.rules[15].opcodes=[],this.rules[15].opcodes[0]={type:3,min:1,max:1/0},this.rules[15].opcodes[1]={type:1,children:[2,3]},this.rules[15].opcodes[2]={type:5,min:0,max:9},this.rules[15].opcodes[3]={type:5,min:11,max:127},this.rules[16].opcodes=[],this.rules[16].opcodes[0]={type:3,min:1,max:1/0},this.rules[16].opcodes[1]={type:1,children:[2,3]},this.rules[16].opcodes[2]={type:5,min:0,max:9},this.rules[16].opcodes[3]={type:5,min:11,max:127},this.rules[17].opcodes=[],this.rules[17].opcodes[0]={type:3,min:1,max:1/0},this.rules[17].opcodes[1]={type:1,children:[2,3]},this.rules[17].opcodes[2]={type:5,min:0,max:9},this.rules[17].opcodes[3]={type:5,min:11,max:127},this.rules[18].opcodes=[],this.rules[18].opcodes[0]={type:3,min:0,max:1/0},this.rules[18].opcodes[1]={type:1,children:[2,3]},this.rules[18].opcodes[2]={type:5,min:0,max:9},this.rules[18].opcodes[3]={type:5,min:11,max:127},this.rules[19].opcodes=[],this.rules[19].opcodes[0]={type:3,min:0,max:1/0},this.rules[19].opcodes[1]={type:2,children:[2,3]},this.rules[19].opcodes[2]={type:6,string:[10]},this.rules[19].opcodes[3]={type:4,index:20},this.rules[20].opcodes=[],this.rules[20].opcodes[0]={type:2,children:[1,2]},this.rules[20].opcodes[1]={type:7,string:[45,32]},this.rules[20].opcodes[2]={type:3,min:1,max:1/0},this.rules[20].opcodes[3]={type:1,children:[4,5]},this.rules[20].opcodes[4]={type:5,min:0,max:9},this.rules[20].opcodes[5]={type:5,min:11,max:127},this.rules[21].opcodes=[],this.rules[21].opcodes[0]={type:6,string:[10,10]},this.rules[22].opcodes=[],this.rules[22].opcodes[0]={type:6,string:[10,10,10]},this.rules[23].opcodes=[],this.rules[23].opcodes[0]={type:2,children:[1,2,3]},this.rules[23].opcodes[1]={type:6,string:[10]},this.rules[23].opcodes[2]={type:4,index:14},this.rules[23].opcodes[3]={type:6,string:[10,10]},this.rules[24].opcodes=[],this.rules[24].opcodes[0]={type:4,index:51},this.rules[25].opcodes=[],this.rules[25].opcodes[0]={type:2,children:[1,2]},this.rules[25].opcodes[1]={type:6,string:[48,120]},this.rules[25].opcodes[2]={type:3,min:40,max:40},this.rules[25].opcodes[3]={type:1,children:[4,5,6]},this.rules[25].opcodes[4]={type:5,min:48,max:57},this.rules[25].opcodes[5]={type:5,min:65,max:70},this.rules[25].opcodes[6]={type:5,min:97,max:102},this.rules[26].opcodes=[],this.rules[26].opcodes[0]={type:3,min:1,max:1/0},this.rules[26].opcodes[1]={type:1,children:[2,3,4]},this.rules[26].opcodes[2]={type:4,index:82},this.rules[26].opcodes[3]={type:4,index:81},this.rules[26].opcodes[4]={type:7,string:[32]},this.rules[27].opcodes=[],this.rules[27].opcodes[0]={type:6,string:[49]},this.rules[28].opcodes=[],this.rules[28].opcodes[0]={type:3,min:1,max:1/0},this.rules[28].opcodes[1]={type:5,min:48,max:57},this.rules[29].opcodes=[],this.rules[29].opcodes[0]={type:3,min:8,max:1/0},this.rules[29].opcodes[1]={type:1,children:[2,5]},this.rules[29].opcodes[2]={type:1,children:[3,4]},this.rules[29].opcodes[3]={type:5,min:97,max:122},this.rules[29].opcodes[4]={type:5,min:65,max:90},this.rules[29].opcodes[5]={type:5,min:48,max:57},this.rules[30].opcodes=[],this.rules[30].opcodes[0]={type:4,index:48},this.rules[31].opcodes=[],this.rules[31].opcodes[0]={type:4,index:48},this.rules[32].opcodes=[],this.rules[32].opcodes[0]={type:4,index:48},this.rules[33].opcodes=[],this.rules[33].opcodes[0]={type:3,min:0,max:1/0},this.rules[33].opcodes[1]={type:4,index:79},this.rules[34].opcodes=[],this.rules[34].opcodes[0]={type:3,min:0,max:1/0},this.rules[34].opcodes[1]={type:2,children:[2,3]},this.rules[34].opcodes[2]={type:6,string:[10]},this.rules[34].opcodes[3]={type:4,index:35},this.rules[35].opcodes=[],this.rules[35].opcodes[0]={type:2,children:[1,2]},this.rules[35].opcodes[1]={type:6,string:[45,32]},this.rules[35].opcodes[2]={type:4,index:49},this.rules[36].opcodes=[],this.rules[36].opcodes[0]={type:3,min:4,max:4},this.rules[36].opcodes[1]={type:5,min:48,max:57},this.rules[37].opcodes=[],this.rules[37].opcodes[0]={type:3,min:2,max:2},this.rules[37].opcodes[1]={type:5,min:48,max:57},this.rules[38].opcodes=[],this.rules[38].opcodes[0]={type:3,min:2,max:2},this.rules[38].opcodes[1]={type:5,min:48,max:57},this.rules[39].opcodes=[],this.rules[39].opcodes[0]={type:3,min:2,max:2},this.rules[39].opcodes[1]={type:5,min:48,max:57},this.rules[40].opcodes=[],this.rules[40].opcodes[0]={type:3,min:2,max:2},this.rules[40].opcodes[1]={type:5,min:48,max:57},this.rules[41].opcodes=[],this.rules[41].opcodes[0]={type:3,min:2,max:2},this.rules[41].opcodes[1]={type:5,min:48,max:57},this.rules[42].opcodes=[],this.rules[42].opcodes[0]={type:2,children:[1,2]},this.rules[42].opcodes[1]={type:6,string:[46]},this.rules[42].opcodes[2]={type:3,min:1,max:1/0},this.rules[42].opcodes[3]={type:5,min:48,max:57},this.rules[43].opcodes=[],this.rules[43].opcodes[0]={type:2,children:[1,4,5,6]},this.rules[43].opcodes[1]={type:1,children:[2,3]},this.rules[43].opcodes[2]={type:6,string:[43]},this.rules[43].opcodes[3]={type:6,string:[45]},this.rules[43].opcodes[4]={type:4,index:39},this.rules[43].opcodes[5]={type:6,string:[58]},this.rules[43].opcodes[6]={type:4,index:40},this.rules[44].opcodes=[],this.rules[44].opcodes[0]={type:1,children:[1,2]},this.rules[44].opcodes[1]={type:7,string:[122]},this.rules[44].opcodes[2]={type:4,index:43},this.rules[45].opcodes=[],this.rules[45].opcodes[0]={type:2,children:[1,2,3,4,5,6]},this.rules[45].opcodes[1]={type:4,index:39},this.rules[45].opcodes[2]={type:6,string:[58]},this.rules[45].opcodes[3]={type:4,index:40},this.rules[45].opcodes[4]={type:6,string:[58]},this.rules[45].opcodes[5]={type:4,index:41},this.rules[45].opcodes[6]={type:3,min:0,max:1},this.rules[45].opcodes[7]={type:4,index:42},this.rules[46].opcodes=[],this.rules[46].opcodes[0]={type:2,children:[1,2,3,4,5]},this.rules[46].opcodes[1]={type:4,index:36},this.rules[46].opcodes[2]={type:6,string:[45]},this.rules[46].opcodes[3]={type:4,index:37},this.rules[46].opcodes[4]={type:6,string:[45]},this.rules[46].opcodes[5]={type:4,index:38},this.rules[47].opcodes=[],this.rules[47].opcodes[0]={type:2,children:[1,2]},this.rules[47].opcodes[1]={type:4,index:45},this.rules[47].opcodes[2]={type:4,index:44},this.rules[48].opcodes=[],this.rules[48].opcodes[0]={type:2,children:[1,2,3]},this.rules[48].opcodes[1]={type:4,index:46},this.rules[48].opcodes[2]={type:7,string:[116]},this.rules[48].opcodes[3]={type:4,index:47},this.rules[49].opcodes=[],this.rules[49].opcodes[0]={type:2,children:[1,2,3,4,8]},this.rules[49].opcodes[1]={type:4,index:78},this.rules[49].opcodes[2]={type:6,string:[58]},this.rules[49].opcodes[3]={type:4,index:50},this.rules[49].opcodes[4]={type:3,min:0,max:1},this.rules[49].opcodes[5]={type:2,children:[6,7]},this.rules[49].opcodes[6]={type:6,string:[63]},this.rules[49].opcodes[7]={type:4,index:74},this.rules[49].opcodes[8]={type:3,min:0,max:1},this.rules[49].opcodes[9]={type:2,children:[10,11]},this.rules[49].opcodes[10]={type:6,string:[35]},this.rules[49].opcodes[11]={type:4,index:75},this.rules[50].opcodes=[],this.rules[50].opcodes[0]={type:1,children:[1,5,6,7]},this.rules[50].opcodes[1]={type:2,children:[2,3,4]},this.rules[50].opcodes[2]={type:6,string:[47,47]},this.rules[50].opcodes[3]={type:4,index:51},this.rules[50].opcodes[4]={type:4,index:52},this.rules[50].opcodes[5]={type:4,index:53},this.rules[50].opcodes[6]={type:4,index:54},this.rules[50].opcodes[7]={type:4,index:55},this.rules[51].opcodes=[],this.rules[51].opcodes[0]={type:2,children:[1,3,4]},this.rules[51].opcodes[1]={type:3,min:0,max:1},this.rules[51].opcodes[2]={type:4,index:56},this.rules[51].opcodes[3]={type:4,index:58},this.rules[51].opcodes[4]={type:3,min:0,max:1},this.rules[51].opcodes[5]={type:2,children:[6,7]},this.rules[51].opcodes[6]={type:6,string:[58]},this.rules[51].opcodes[7]={type:4,index:73},this.rules[52].opcodes=[],this.rules[52].opcodes[0]={type:3,min:0,max:1/0},this.rules[52].opcodes[1]={type:2,children:[2,3]},this.rules[52].opcodes[2]={type:6,string:[47]},this.rules[52].opcodes[3]={type:4,index:76},this.rules[53].opcodes=[],this.rules[53].opcodes[0]={type:2,children:[1,2]},this.rules[53].opcodes[1]={type:6,string:[47]},this.rules[53].opcodes[2]={type:3,min:0,max:1},this.rules[53].opcodes[3]={type:2,children:[4,5]},this.rules[53].opcodes[4]={type:4,index:77},this.rules[53].opcodes[5]={type:3,min:0,max:1/0},this.rules[53].opcodes[6]={type:2,children:[7,8]},this.rules[53].opcodes[7]={type:6,string:[47]},this.rules[53].opcodes[8]={type:4,index:76},this.rules[54].opcodes=[],this.rules[54].opcodes[0]={type:2,children:[1,2]},this.rules[54].opcodes[1]={type:4,index:77},this.rules[54].opcodes[2]={type:3,min:0,max:1/0},this.rules[54].opcodes[3]={type:2,children:[4,5]},this.rules[54].opcodes[4]={type:6,string:[47]},this.rules[54].opcodes[5]={type:4,index:76},this.rules[55].opcodes=[],this.rules[55].opcodes[0]={type:7,string:[]},this.rules[56].opcodes=[],this.rules[56].opcodes[0]={type:2,children:[1,2]},this.rules[56].opcodes[1]={type:4,index:57},this.rules[56].opcodes[2]={type:6,string:[64]},this.rules[57].opcodes=[],this.rules[57].opcodes[0]={type:3,min:0,max:1/0},this.rules[57].opcodes[1]={type:1,children:[2,3,4,5,6,7,8,9,10,11,12]},this.rules[57].opcodes[2]={type:5,min:97,max:122},this.rules[57].opcodes[3]={type:5,min:65,max:90},this.rules[57].opcodes[4]={type:5,min:48,max:57},this.rules[57].opcodes[5]={type:4,index:80},this.rules[57].opcodes[6]={type:6,string:[33]},this.rules[57].opcodes[7]={type:6,string:[36]},this.rules[57].opcodes[8]={type:5,min:38,max:46},this.rules[57].opcodes[9]={type:5,min:58,max:59},this.rules[57].opcodes[10]={type:6,string:[61]},this.rules[57].opcodes[11]={type:6,string:[95]},this.rules[57].opcodes[12]={type:6,string:[126]},this.rules[58].opcodes=[],this.rules[58].opcodes[0]={type:1,children:[1,2,6]},this.rules[58].opcodes[1]={type:4,index:59},this.rules[58].opcodes[2]={type:2,children:[3,4]},this.rules[58].opcodes[3]={type:4,index:68},this.rules[58].opcodes[4]={type:13},this.rules[58].opcodes[5]={type:4,index:72},this.rules[58].opcodes[6]={type:4,index:71},this.rules[59].opcodes=[],this.rules[59].opcodes[0]={type:2,children:[1,2,5]},this.rules[59].opcodes[1]={type:6,string:[91]},this.rules[59].opcodes[2]={type:1,children:[3,4]},this.rules[59].opcodes[3]={type:4,index:61},this.rules[59].opcodes[4]={type:4,index:60},this.rules[59].opcodes[5]={type:6,string:[93]},this.rules[60].opcodes=[],this.rules[60].opcodes[0]={type:2,children:[1,2,7,8]},this.rules[60].opcodes[1]={type:7,string:[118]},this.rules[60].opcodes[2]={type:3,min:1,max:1/0},this.rules[60].opcodes[3]={type:1,children:[4,5,6]},this.rules[60].opcodes[4]={type:5,min:48,max:57},this.rules[60].opcodes[5]={type:5,min:65,max:70},this.rules[60].opcodes[6]={type:5,min:97,max:102},this.rules[60].opcodes[7]={type:7,string:[46]},this.rules[60].opcodes[8]={type:3,min:1,max:1/0},this.rules[60].opcodes[9]={type:1,children:[10,11,12,13,14,15,16,17,18,19]},this.rules[60].opcodes[10]={type:5,min:97,max:122},this.rules[60].opcodes[11]={type:5,min:65,max:90},this.rules[60].opcodes[12]={type:5,min:48,max:57},this.rules[60].opcodes[13]={type:6,string:[33]},this.rules[60].opcodes[14]={type:6,string:[36]},this.rules[60].opcodes[15]={type:5,min:38,max:46},this.rules[60].opcodes[16]={type:5,min:58,max:59},this.rules[60].opcodes[17]={type:6,string:[61]},this.rules[60].opcodes[18]={type:6,string:[95]},this.rules[60].opcodes[19]={type:6,string:[126]},this.rules[61].opcodes=[],this.rules[61].opcodes[0]={type:1,children:[1,2]},this.rules[61].opcodes[1]={type:4,index:62},this.rules[61].opcodes[2]={type:4,index:63},this.rules[62].opcodes=[],this.rules[62].opcodes[0]={type:2,children:[1,5]},this.rules[62].opcodes[1]={type:2,children:[2,3]},this.rules[62].opcodes[2]={type:4,index:66},this.rules[62].opcodes[3]={type:3,min:0,max:1/0},this.rules[62].opcodes[4]={type:4,index:67},this.rules[62].opcodes[5]={type:3,min:0,max:1},this.rules[62].opcodes[6]={type:2,children:[7,8]},this.rules[62].opcodes[7]={type:6,string:[58]},this.rules[62].opcodes[8]={type:4,index:68},this.rules[63].opcodes=[],this.rules[63].opcodes[0]={type:2,children:[1,6,7]},this.rules[63].opcodes[1]={type:3,min:0,max:1},this.rules[63].opcodes[2]={type:2,children:[3,4]},this.rules[63].opcodes[3]={type:4,index:64},this.rules[63].opcodes[4]={type:3,min:0,max:1/0},this.rules[63].opcodes[5]={type:4,index:65},this.rules[63].opcodes[6]={type:6,string:[58,58]},this.rules[63].opcodes[7]={type:1,children:[8,17]},this.rules[63].opcodes[8]={type:2,children:[9,13]},this.rules[63].opcodes[9]={type:2,children:[10,11]},this.rules[63].opcodes[10]={type:4,index:66},this.rules[63].opcodes[11]={type:3,min:0,max:1/0},this.rules[63].opcodes[12]={type:4,index:67},this.rules[63].opcodes[13]={type:3,min:0,max:1},this.rules[63].opcodes[14]={type:2,children:[15,16]},this.rules[63].opcodes[15]={type:6,string:[58]},this.rules[63].opcodes[16]={type:4,index:68},this.rules[63].opcodes[17]={type:3,min:0,max:1},this.rules[63].opcodes[18]={type:4,index:68},this.rules[64].opcodes=[],this.rules[64].opcodes[0]={type:3,min:1,max:4},this.rules[64].opcodes[1]={type:1,children:[2,3,4]},this.rules[64].opcodes[2]={type:5,min:48,max:57},this.rules[64].opcodes[3]={type:5,min:65,max:70},this.rules[64].opcodes[4]={type:5,min:97,max:102},this.rules[65].opcodes=[],this.rules[65].opcodes[0]={type:2,children:[1,2]},this.rules[65].opcodes[1]={type:6,string:[58]},this.rules[65].opcodes[2]={type:3,min:1,max:4},this.rules[65].opcodes[3]={type:1,children:[4,5,6]},this.rules[65].opcodes[4]={type:5,min:48,max:57},this.rules[65].opcodes[5]={type:5,min:65,max:70},this.rules[65].opcodes[6]={type:5,min:97,max:102},this.rules[66].opcodes=[],this.rules[66].opcodes[0]={type:2,children:[1,6]},this.rules[66].opcodes[1]={type:3,min:1,max:4},this.rules[66].opcodes[2]={type:1,children:[3,4,5]},this.rules[66].opcodes[3]={type:5,min:48,max:57},this.rules[66].opcodes[4]={type:5,min:65,max:70},this.rules[66].opcodes[5]={type:5,min:97,max:102},this.rules[66].opcodes[6]={type:13},this.rules[66].opcodes[7]={type:6,string:[46]},this.rules[67].opcodes=[],this.rules[67].opcodes[0]={type:2,children:[1,2,7]},this.rules[67].opcodes[1]={type:6,string:[58]},this.rules[67].opcodes[2]={type:3,min:1,max:4},this.rules[67].opcodes[3]={type:1,children:[4,5,6]},this.rules[67].opcodes[4]={type:5,min:48,max:57},this.rules[67].opcodes[5]={type:5,min:65,max:70},this.rules[67].opcodes[6]={type:5,min:97,max:102},this.rules[67].opcodes[7]={type:13},this.rules[67].opcodes[8]={type:6,string:[46]},this.rules[68].opcodes=[],this.rules[68].opcodes[0]={type:2,children:[1,2,3,4,5,6,7]},this.rules[68].opcodes[1]={type:4,index:69},this.rules[68].opcodes[2]={type:6,string:[46]},this.rules[68].opcodes[3]={type:4,index:69},this.rules[68].opcodes[4]={type:6,string:[46]},this.rules[68].opcodes[5]={type:4,index:69},this.rules[68].opcodes[6]={type:6,string:[46]},this.rules[68].opcodes[7]={type:4,index:69},this.rules[69].opcodes=[],this.rules[69].opcodes[0]={type:3,min:0,max:3},this.rules[69].opcodes[1]={type:4,index:70},this.rules[70].opcodes=[],this.rules[70].opcodes[0]={type:5,min:48,max:57},this.rules[71].opcodes=[],this.rules[71].opcodes[0]={type:3,min:0,max:1/0},this.rules[71].opcodes[1]={type:4,index:72},this.rules[72].opcodes=[],this.rules[72].opcodes[0]={type:1,children:[1,2,3,4,5,6,7,8,9,10,11]},this.rules[72].opcodes[1]={type:5,min:97,max:122},this.rules[72].opcodes[2]={type:5,min:65,max:90},this.rules[72].opcodes[3]={type:5,min:48,max:57},this.rules[72].opcodes[4]={type:4,index:80},this.rules[72].opcodes[5]={type:6,string:[33]},this.rules[72].opcodes[6]={type:6,string:[36]},this.rules[72].opcodes[7]={type:5,min:38,max:46},this.rules[72].opcodes[8]={type:6,string:[59]},this.rules[72].opcodes[9]={type:6,string:[61]},this.rules[72].opcodes[10]={type:6,string:[95]},this.rules[72].opcodes[11]={type:6,string:[126]},this.rules[73].opcodes=[],this.rules[73].opcodes[0]={type:3,min:0,max:1/0},this.rules[73].opcodes[1]={type:5,min:48,max:57},this.rules[74].opcodes=[],this.rules[74].opcodes[0]={type:3,min:0,max:1/0},this.rules[74].opcodes[1]={type:1,children:[2,3,4]},this.rules[74].opcodes[2]={type:4,index:79},this.rules[74].opcodes[3]={type:6,string:[47]},this.rules[74].opcodes[4]={type:6,string:[63]},this.rules[75].opcodes=[],this.rules[75].opcodes[0]={type:3,min:0,max:1/0},this.rules[75].opcodes[1]={type:1,children:[2,3,4]},this.rules[75].opcodes[2]={type:4,index:79},this.rules[75].opcodes[3]={type:6,string:[47]},this.rules[75].opcodes[4]={type:6,string:[63]},this.rules[76].opcodes=[],this.rules[76].opcodes[0]={type:3,min:0,max:1/0},this.rules[76].opcodes[1]={type:4,index:79},this.rules[77].opcodes=[],this.rules[77].opcodes[0]={type:3,min:1,max:1/0},this.rules[77].opcodes[1]={type:4,index:79},this.rules[78].opcodes=[],this.rules[78].opcodes[0]={type:2,children:[1,4]},this.rules[78].opcodes[1]={type:1,children:[2,3]},this.rules[78].opcodes[2]={type:5,min:97,max:122},this.rules[78].opcodes[3]={type:5,min:65,max:90},this.rules[78].opcodes[4]={type:3,min:0,max:1/0},this.rules[78].opcodes[5]={type:1,children:[6,9,10,11]},this.rules[78].opcodes[6]={type:1,children:[7,8]},this.rules[78].opcodes[7]={type:5,min:97,max:122},this.rules[78].opcodes[8]={type:5,min:65,max:90},this.rules[78].opcodes[9]={type:5,min:48,max:57},this.rules[78].opcodes[10]={type:6,string:[43]},this.rules[78].opcodes[11]={type:5,min:45,max:46},this.rules[79].opcodes=[],this.rules[79].opcodes[0]={type:1,children:[1,2,3,4,5,6,7,8,9,10]},this.rules[79].opcodes[1]={type:5,min:97,max:122},this.rules[79].opcodes[2]={type:5,min:64,max:90},this.rules[79].opcodes[3]={type:5,min:48,max:59},this.rules[79].opcodes[4]={type:6,string:[33]},this.rules[79].opcodes[5]={type:6,string:[36]},this.rules[79].opcodes[6]={type:5,min:38,max:46},this.rules[79].opcodes[7]={type:6,string:[61]},this.rules[79].opcodes[8]={type:6,string:[95]},this.rules[79].opcodes[9]={type:6,string:[126]},this.rules[79].opcodes[10]={type:4,index:80},this.rules[80].opcodes=[],this.rules[80].opcodes[0]={type:2,children:[1,2,6]},this.rules[80].opcodes[1]={type:6,string:[37]},this.rules[80].opcodes[2]={type:1,children:[3,4,5]},this.rules[80].opcodes[3]={type:5,min:48,max:57},this.rules[80].opcodes[4]={type:5,min:65,max:70},this.rules[80].opcodes[5]={type:5,min:97,max:102},this.rules[80].opcodes[6]={type:1,children:[7,8,9]},this.rules[80].opcodes[7]={type:5,min:48,max:57},this.rules[80].opcodes[8]={type:5,min:65,max:70},this.rules[80].opcodes[9]={type:5,min:97,max:102},this.rules[81].opcodes=[],this.rules[81].opcodes[0]={type:1,children:[1,2,3,4,5,6]},this.rules[81].opcodes[1]={type:5,min:97,max:122},this.rules[81].opcodes[2]={type:5,min:65,max:90},this.rules[81].opcodes[3]={type:5,min:48,max:57},this.rules[81].opcodes[4]={type:5,min:45,max:46},this.rules[81].opcodes[5]={type:6,string:[95]},this.rules[81].opcodes[6]={type:6,string:[126]},this.rules[82].opcodes=[],this.rules[82].opcodes[0]={type:1,children:[1,2,3,4,5,6,7,8,9]},this.rules[82].opcodes[1]={type:6,string:[33]},this.rules[82].opcodes[2]={type:5,min:35,max:36},this.rules[82].opcodes[3]={type:5,min:38,max:44},this.rules[82].opcodes[4]={type:6,string:[47]},this.rules[82].opcodes[5]={type:5,min:58,max:59},this.rules[82].opcodes[6]={type:6,string:[61]},this.rules[82].opcodes[7]={type:5,min:63,max:64},this.rules[82].opcodes[8]={type:6,string:[91]},this.rules[82].opcodes[9]={type:6,string:[93]},this.toString=function(){let e="";return e+=";\n",e+="; LDT 12/15/2024 \n",e+="; The ERC-4361 (https://eips.ethereum.org/EIPS/eip-4361) ABNF format has been modified in several significant ways.\n",e+="; 1) Literal strings are replaced with numbers and ranges (%d32 & %d32-126, etc.) when possible.\n",e+=";    TRB and especially TRG operators are much more efficient than TLS operators.\n",e+="; 2) The message items (scheme, etc.) are first defined as general strings of any characters.\n",e+=";    On a second pass, these item are validated against the ERC_4361 format individually.\n",e+='; 3) IPv6address does not work because of APG\'s "first-success disambiguation" and "greedy" repetitions.\n',e+=";    IPv6address is redefined and validations moved to callback functions (semantic vs syntactic validation).\n",e+=";    Redefinition requires negative look-ahead operators, https://en.wikipedia.org/wiki/Syntactic_predicate.\n",e+=";    That is, SABNF instead of simple ABNF.\n",e+='; 4) IPv4address fails because of "first-success disambiguation".\n',e+=";    This could be fixed with rearrangement of the alternative terms.\n",e+=";    However, it would still not accept zero-padded (leading zeros) decimal octets.\n",e+=";    Therefore, IPv4address is also done with callback functions and semantic validation.\n",e+="; 5) The negative look-ahead operator is also needed in the definition of host to\n",e+=";    prevent failure with a reg-name that begins with an IPv4 address.\n",e+="; 6) NOTE: host = 1.1.1.256 is a valid host name even though it is an invalid IPv4address.\n",e+=";          The IPv4address alternative fails but the reg-name alternative succeeds.\n",e+="; 7) The ERC-4361 message format ABNF allows for empty statements.\n",e+=';    Because of the "first success disambiguation" of APG\n',e+=';    the an explicit "empty-statement" rule is required to match the spec\'s intent.\n',e+="; 8) Basics LF, ALPHA, DIGIT and HEXDIG have been expanded in place to reduce the number of rule name operations.\n",e+=";\n",e+="siwe-first-pass =\n",e+='    [ ffscheme ] fdomain %s" wants you to sign in with your Ethereum account:" %d10\n',e+="    faddress %d10\n",e+="    (empty-statement / no-statement / actual-statement)\n",e+="    pre-uri furi %d10\n",e+="    pre-version fversion %d10\n",e+="    pre-chain-id fchain-id %d10\n",e+="    pre-nonce fnonce %d10\n",e+="    pre-issued-at fissued-at\n",e+='    [ %d10 %s"Expiration Time: " fexpiration-time ]\n',e+='    [ %d10 %s"Not Before: " fnot-before ]\n',e+='    [ %d10 %s"Request ID: " frequest-id ]\n',e+='    [ %d10 %s"Resources:" fresources]\n',e+="\n",e+='pre-uri = %s"URI: "\n',e+='pre-version       = %s"Version: "\n',e+='pre-chain-id      = %s"Chain ID: "\n',e+='pre-nonce         = %s"Nonce: "\n',e+='pre-issued-at     = %s"Issued At: "\n',e+='ffscheme          = fscheme %s"://"\n',e+="fdomain           = 1*(%d0-31 / %d33-127) ; all characters but space\n",e+="fissued-at        = 1*(%d0-9 / %d11-127)  ; all characters but linefeed\n",e+="fexpiration-time  = 1*(%d0-9 / %d11-127)\n",e+="fnot-before       = 1*(%d0-9 / %d11-127)\n",e+="furi              = 1*(%d0-9 / %d11-127)\n",e+="fscheme           = 1*(%d0-57 / %d59-127) ; any character but colon(:)\n",e+="faddress          = 1*(%d0-9 / %d11-127)\n",e+="fstatement        = 1*(%d0-9 / %d11-127)\n",e+="fversion          = 1*(%d0-9 / %d11-127)\n",e+="fchain-id         = 1*(%d0-9 / %d11-127)\n",e+="fnonce            = 1*(%d0-9 / %d11-127)\n",e+="frequest-id       = *(%d0-9 / %d11-127)\n",e+="fresources        = *( %d10 fresource )\n",e+='fresource         = "- " 1*(%d0-9 / %d11-127)\n',e+="no-statement      = %d10.10\n",e+="empty-statement   = %d10.10.10\n",e+="actual-statement  = %d10 fstatement %d10.10\n",e+="\n",e+="domain = authority\n",e+="    ; From RFC 3986:\n",e+='address = %s"0x" 40*40(%d48-57 / %d65-70 / %d97-102)\n',e+="    ; Optionally must also conform to capitalization\n",e+="    ; checksum encoding specified in EIP-55\n",e+='statement = 1*( reserved / unreserved / " " )\n',e+="    ; See RFC 3986 for the definition\n",e+='    ; of "reserved" and "unreserved".\n',e+="    ; The purpose is to exclude %d10 (line break).\n",e+='version = %s"1"\n',e+="chain-id = 1*%d48-57\n",e+="    ; See EIP-155 for valid CHAIN_IDs.\n",e+="nonce = 8*( (%d97-122 / %d65-90) / %d48-57 )\n",e+="issued-at = date-time\n",e+="expiration-time = date-time\n",e+="not-before = date-time\n",e+="    ; See RFC 3339 (ISO 8601) for the\n",e+='    ; definition of "date-time".\n',e+="request-id = *pchar\n",e+='    ; See RFC 3986 for the definition of "pchar".\n',e+="resources = *( %d10 resource )\n",e+='resource = %s"- " URI\n',e+="\n",e+="; RFC 3339 - Date and Time on the Internet: Timestamps\n",e+="date-fullyear   = 4%d48-57\n",e+="date-month      = 2%d48-57  ; 01-12\n",e+="date-mday       = 2%d48-57  ; 01-28, 01-29, 01-30, 01-31 based on\n",e+="                            ; month/year\n",e+="time-hour       = 2%d48-57  ; 00-23\n",e+="time-minute     = 2%d48-57  ; 00-59\n",e+="time-second     = 2%d48-57  ; 00-58, 00-59, 00-60 based on leap second\n",e+="                            ; rules\n",e+='time-secfrac    = %s"." 1*%d48-57\n',e+='time-numoffset  = (%s"+" / %s"-") time-hour %s":" time-minute\n',e+='time-offset     = "Z" / time-numoffset\n',e+='partial-time    = time-hour %s":" time-minute %s":" time-second\n',e+="                  [time-secfrac]\n",e+='full-date       = date-fullyear %s"-" date-month %s"-" date-mday\n',e+="full-time       = partial-time time-offset\n",e+='date-time       = full-date "T" full-time\n',e+="\n",e+="; RFC 3986 - Uniform Resource Identifier (URI): Generic Syntax\n",e+="; Modified to improve APG parsing and callback functions.\n",e+='URI           = scheme %s":" hier-part [ %s"?" query ] [ %s"#" fragment ]\n',e+='hier-part     = %s"//" authority path-abempty\n',e+="              / path-absolute\n",e+="              / path-rootless\n",e+="              / path-empty\n",e+='authority     = [ userinfo-at ] host [ %s":" port ]\n',e+='path-abempty  = *( %s"/" segment )\n',e+='path-absolute = %s"/" [ segment-nz *( %s"/" segment ) ]\n',e+='path-rootless = segment-nz *( %s"/" segment )\n',e+='path-empty    = ""\n',e+="userinfo-at   = userinfo %d64\n",e+='                ; userinfo redefined to include the "@" so that it will fail without it\n',e+="                ; otherwise userinfo can match host and then the parser will backtrack\n",e+="                ; incorrectly keeping the captured userinfo phrase\n",e+="userinfo      = *(%d97-122 / %d65-90 / %d48-57 / pct-encoded / %d33 / %d36 / %d38-46 / %d58-59 / %d61 / %d95 / %d126)\n",e+="host          = IP-literal / (IPv4address !reg-name-char) / reg-name\n",e+="                ; negative look-ahead required to prevent IPv4address from being recognized as first part of reg-name\n",e+="                ; same fix as https://github.com/garycourt/uri-js/issues/4\n",e+='IP-literal    = %s"[" ( IPv6address / IPvFuture  ) %s"]"\n',e+='IPvFuture     = "v" 1*(%d48-57 / %d65-70 / %d97-102) "." 1*( %d97-122 / %d65-90 / %d48-57 / %d33 / %d36 /%d38-46 / %d58-59 /%d61 /%d95 / %d126 )\n',e+="IPv6address   = nodcolon / dcolon\n",e+="nodcolon      = (h16n *h16cn) [%d58 IPv4address]\n",e+="dcolon        = [h16 *h16c] %d58.58 (((h16n *h16cn) [%d58 IPv4address]) / [IPv4address])\n",e+="h16           = 1*4(%d48-57 / %d65-70 / %d97-102)\n",e+="h16c          = %d58 1*4(%d48-57 / %d65-70 / %d97-102)\n",e+="h16n          = 1*4(%d48-57 / %d65-70 / %d97-102) !%d46\n",e+="h16cn         = %d58 1*4(%d48-57 / %d65-70 / %d97-102) !%d46\n",e+='IPv4address   = dec-octet %s"." dec-octet %s"." dec-octet %s"." dec-octet\n',e+="; Here we will will use callback functions to evaluate and validate the (possibly zero-padded) dec-octet.\n",e+="dec-octet     =  *3dec-digit\n",e+="dec-digit     = %d48-57\n",e+="reg-name      = *reg-name-char\n",e+="reg-name-char = %d97-122 / %d65-90 / %d48-57 / pct-encoded / %d33 / %d36 / %d38-46 / %d59 / %d61 /%d95 / %d126\n",e+="port          = *%d48-57\n",e+="query         = *(pchar / %d47 / %d63)\n",e+="fragment      = *(pchar / %d47 / %d63)\n",e+="segment       = *pchar\n",e+="segment-nz    = 1*pchar\n",e+="scheme        = (%d97-122 / %d65-90) *( (%d97-122 / %d65-90) / %d48-57 / %d43 / %d45-46)\n",e+="pchar         = %d97-122 / %d64-90 /  %d48-59 / %d33 / %d36 / %d38-46 / %d61 / %d95 / %d126 / pct-encoded\n",e+='pct-encoded   = %s"%" (%d48-57 / %d65-70 / %d97-102) (%d48-57 / %d65-70 / %d97-102)\n',e+="unreserved    = %d97-122 / %d65-90 /  %d48-57 / %d45-46 / %d95 / %d126\n",e+="reserved      = %d33 / %d35-36 / %d38-44 / %d47 / %d58-59 / %d61 / %d63-64 / %d91 / %d93\n",e+=';scheme        = ALPHA *( ALPHA / DIGIT / "+" / "-" / "." )\n',e+=';pchar         = unreserved / pct-encoded / sub-delims / %s":" / %s"@"\n',e+=';unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"\n',e+=";reserved      = gen-delims / sub-delims\n",e+=';gen-delims    = ":" / "/" / "?" / "#" / "[" / "]" / "@"\n',e+=";gen-delims    = %d35 / %d47 / %d58 /%d63-64 / %d91 / %d93\n",e+=';sub-delims    = "!" / "$" / "&" / "\'" / "(" / ")"\n',e+=';                 / "*" / "+" / "," / ";" / "="\n',e+=";sub-delims    = %d33 / %d36 / %d38-44 / %d59 / %d61\n",e+="\n",';\n; LDT 12/15/2024 \n; The ERC-4361 (https://eips.ethereum.org/EIPS/eip-4361) ABNF format has been modified in several significant ways.\n; 1) Literal strings are replaced with numbers and ranges (%d32 & %d32-126, etc.) when possible.\n;    TRB and especially TRG operators are much more efficient than TLS operators.\n; 2) The message items (scheme, etc.) are first defined as general strings of any characters.\n;    On a second pass, these item are validated against the ERC_4361 format individually.\n; 3) IPv6address does not work because of APG\'s "first-success disambiguation" and "greedy" repetitions.\n;    IPv6address is redefined and validations moved to callback functions (semantic vs syntactic validation).\n;    Redefinition requires negative look-ahead operators, https://en.wikipedia.org/wiki/Syntactic_predicate.\n;    That is, SABNF instead of simple ABNF.\n; 4) IPv4address fails because of "first-success disambiguation".\n;    This could be fixed with rearrangement of the alternative terms.\n;    However, it would still not accept zero-padded (leading zeros) decimal octets.\n;    Therefore, IPv4address is also done with callback functions and semantic validation.\n; 5) The negative look-ahead operator is also needed in the definition of host to\n;    prevent failure with a reg-name that begins with an IPv4 address.\n; 6) NOTE: host = 1.1.1.256 is a valid host name even though it is an invalid IPv4address.\n;          The IPv4address alternative fails but the reg-name alternative succeeds.\n; 7) The ERC-4361 message format ABNF allows for empty statements.\n;    Because of the "first success disambiguation" of APG\n;    the an explicit "empty-statement" rule is required to match the spec\'s intent.\n; 8) Basics LF, ALPHA, DIGIT and HEXDIG have been expanded in place to reduce the number of rule name operations.\n;\nsiwe-first-pass =\n    [ ffscheme ] fdomain %s" wants you to sign in with your Ethereum account:" %d10\n    faddress %d10\n    (empty-statement / no-statement / actual-statement)\n    pre-uri furi %d10\n    pre-version fversion %d10\n    pre-chain-id fchain-id %d10\n    pre-nonce fnonce %d10\n    pre-issued-at fissued-at\n    [ %d10 %s"Expiration Time: " fexpiration-time ]\n    [ %d10 %s"Not Before: " fnot-before ]\n    [ %d10 %s"Request ID: " frequest-id ]\n    [ %d10 %s"Resources:" fresources]\n\npre-uri = %s"URI: "\npre-version       = %s"Version: "\npre-chain-id      = %s"Chain ID: "\npre-nonce         = %s"Nonce: "\npre-issued-at     = %s"Issued At: "\nffscheme          = fscheme %s"://"\nfdomain           = 1*(%d0-31 / %d33-127) ; all characters but space\nfissued-at        = 1*(%d0-9 / %d11-127)  ; all characters but linefeed\nfexpiration-time  = 1*(%d0-9 / %d11-127)\nfnot-before       = 1*(%d0-9 / %d11-127)\nfuri              = 1*(%d0-9 / %d11-127)\nfscheme           = 1*(%d0-57 / %d59-127) ; any character but colon(:)\nfaddress          = 1*(%d0-9 / %d11-127)\nfstatement        = 1*(%d0-9 / %d11-127)\nfversion          = 1*(%d0-9 / %d11-127)\nfchain-id         = 1*(%d0-9 / %d11-127)\nfnonce            = 1*(%d0-9 / %d11-127)\nfrequest-id       = *(%d0-9 / %d11-127)\nfresources        = *( %d10 fresource )\nfresource         = "- " 1*(%d0-9 / %d11-127)\nno-statement      = %d10.10\nempty-statement   = %d10.10.10\nactual-statement  = %d10 fstatement %d10.10\n\ndomain = authority\n    ; From RFC 3986:\naddress = %s"0x" 40*40(%d48-57 / %d65-70 / %d97-102)\n    ; Optionally must also conform to capitalization\n    ; checksum encoding specified in EIP-55\nstatement = 1*( reserved / unreserved / " " )\n    ; See RFC 3986 for the definition\n    ; of "reserved" and "unreserved".\n    ; The purpose is to exclude %d10 (line break).\nversion = %s"1"\nchain-id = 1*%d48-57\n    ; See EIP-155 for valid CHAIN_IDs.\nnonce = 8*( (%d97-122 / %d65-90) / %d48-57 )\nissued-at = date-time\nexpiration-time = date-time\nnot-before = date-time\n    ; See RFC 3339 (ISO 8601) for the\n    ; definition of "date-time".\nrequest-id = *pchar\n    ; See RFC 3986 for the definition of "pchar".\nresources = *( %d10 resource )\nresource = %s"- " URI\n\n; RFC 3339 - Date and Time on the Internet: Timestamps\ndate-fullyear   = 4%d48-57\ndate-month      = 2%d48-57  ; 01-12\ndate-mday       = 2%d48-57  ; 01-28, 01-29, 01-30, 01-31 based on\n                            ; month/year\ntime-hour       = 2%d48-57  ; 00-23\ntime-minute     = 2%d48-57  ; 00-59\ntime-second     = 2%d48-57  ; 00-58, 00-59, 00-60 based on leap second\n                            ; rules\ntime-secfrac    = %s"." 1*%d48-57\ntime-numoffset  = (%s"+" / %s"-") time-hour %s":" time-minute\ntime-offset     = "Z" / time-numoffset\npartial-time    = time-hour %s":" time-minute %s":" time-second\n                  [time-secfrac]\nfull-date       = date-fullyear %s"-" date-month %s"-" date-mday\nfull-time       = partial-time time-offset\ndate-time       = full-date "T" full-time\n\n; RFC 3986 - Uniform Resource Identifier (URI): Generic Syntax\n; Modified to improve APG parsing and callback functions.\nURI           = scheme %s":" hier-part [ %s"?" query ] [ %s"#" fragment ]\nhier-part     = %s"//" authority path-abempty\n              / path-absolute\n              / path-rootless\n              / path-empty\nauthority     = [ userinfo-at ] host [ %s":" port ]\npath-abempty  = *( %s"/" segment )\npath-absolute = %s"/" [ segment-nz *( %s"/" segment ) ]\npath-rootless = segment-nz *( %s"/" segment )\npath-empty    = ""\nuserinfo-at   = userinfo %d64\n                ; userinfo redefined to include the "@" so that it will fail without it\n                ; otherwise userinfo can match host and then the parser will backtrack\n                ; incorrectly keeping the captured userinfo phrase\nuserinfo      = *(%d97-122 / %d65-90 / %d48-57 / pct-encoded / %d33 / %d36 / %d38-46 / %d58-59 / %d61 / %d95 / %d126)\nhost          = IP-literal / (IPv4address !reg-name-char) / reg-name\n                ; negative look-ahead required to prevent IPv4address from being recognized as first part of reg-name\n                ; same fix as https://github.com/garycourt/uri-js/issues/4\nIP-literal    = %s"[" ( IPv6address / IPvFuture  ) %s"]"\nIPvFuture     = "v" 1*(%d48-57 / %d65-70 / %d97-102) "." 1*( %d97-122 / %d65-90 / %d48-57 / %d33 / %d36 /%d38-46 / %d58-59 /%d61 /%d95 / %d126 )\nIPv6address   = nodcolon / dcolon\nnodcolon      = (h16n *h16cn) [%d58 IPv4address]\ndcolon        = [h16 *h16c] %d58.58 (((h16n *h16cn) [%d58 IPv4address]) / [IPv4address])\nh16           = 1*4(%d48-57 / %d65-70 / %d97-102)\nh16c          = %d58 1*4(%d48-57 / %d65-70 / %d97-102)\nh16n          = 1*4(%d48-57 / %d65-70 / %d97-102) !%d46\nh16cn         = %d58 1*4(%d48-57 / %d65-70 / %d97-102) !%d46\nIPv4address   = dec-octet %s"." dec-octet %s"." dec-octet %s"." dec-octet\n; Here we will will use callback functions to evaluate and validate the (possibly zero-padded) dec-octet.\ndec-octet     =  *3dec-digit\ndec-digit     = %d48-57\nreg-name      = *reg-name-char\nreg-name-char = %d97-122 / %d65-90 / %d48-57 / pct-encoded / %d33 / %d36 / %d38-46 / %d59 / %d61 /%d95 / %d126\nport          = *%d48-57\nquery         = *(pchar / %d47 / %d63)\nfragment      = *(pchar / %d47 / %d63)\nsegment       = *pchar\nsegment-nz    = 1*pchar\nscheme        = (%d97-122 / %d65-90) *( (%d97-122 / %d65-90) / %d48-57 / %d43 / %d45-46)\npchar         = %d97-122 / %d64-90 /  %d48-59 / %d33 / %d36 / %d38-46 / %d61 / %d95 / %d126 / pct-encoded\npct-encoded   = %s"%" (%d48-57 / %d65-70 / %d97-102) (%d48-57 / %d65-70 / %d97-102)\nunreserved    = %d97-122 / %d65-90 /  %d48-57 / %d45-46 / %d95 / %d126\nreserved      = %d33 / %d35-36 / %d38-44 / %d47 / %d58-59 / %d61 / %d63-64 / %d91 / %d93\n;scheme        = ALPHA *( ALPHA / DIGIT / "+" / "-" / "." )\n;pchar         = unreserved / pct-encoded / sub-delims / %s":" / %s"@"\n;unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"\n;reserved      = gen-delims / sub-delims\n;gen-delims    = ":" / "/" / "?" / "#" / "[" / "]" / "@"\n;gen-delims    = %d35 / %d47 / %d58 /%d63-64 / %d91 / %d93\n;sub-delims    = "!" / "$" / "&" / "\'" / "(" / ")"\n;                 / "*" / "+" / "," / ";" / "="\n;sub-delims    = %d33 / %d36 / %d38-44 / %d59 / %d61\n\n'}}const d={ffscheme:function(e,s,t,i){e.state===n.MATCH&&(i.fscheme=r.charsToString(s,t,e.phraseLength).slice(0,-3))},fdomain:function(e,s,t,i){e.state===n.MATCH&&(i.fdomain=r.charsToString(s,t,e.phraseLength))},faddress:function(e,s,t,i){e.state===n.MATCH&&(i.faddress=r.charsToString(s,t,e.phraseLength))},authority:function(e,s,t,i){e.state===n.MATCH&&(i.authority=r.charsToString(s,t,e.phraseLength))},fstatement:function(e,s,t,i){e.state===n.MATCH&&(i.fstatement=r.charsToString(s,t,e.phraseLength))},preUri:function(e,s,t,i){e.state!==n.NOMATCH&&e.state!==n.EMPTY||(i.error='URI missing or invalid prefix "URI: "')},furi:function(e,s,t,i){e.state===n.MATCH&&(i.furi=r.charsToString(s,t,e.phraseLength))},preVersion:function(e,s,t,i){e.state!==n.NOMATCH&&e.state!==n.EMPTY||(i.error='Version missing or invalid prefix "Version: "')},fversion:function(e,s,t,i){e.state===n.MATCH&&(i.fversion=r.charsToString(s,t,e.phraseLength))},preChainId:function(e,s,t,i){e.state!==n.NOMATCH&&e.state!==n.EMPTY||(i.error='Chain ID missing or invalid prefex "Chain ID: "')},fchainId:function(e,s,t,i){e.state===n.MATCH&&(i.fchainId=r.charsToString(s,t,e.phraseLength))},preNonce:function(e,s,t,i){e.state!==n.NOMATCH&&e.state!==n.EMPTY||(i.error='Nonce missing or invalid Nonce prefex "Nonce: "')},fnonce:function(e,s,t,i){e.state===n.MATCH&&(i.fnonce=r.charsToString(s,t,e.phraseLength))},preIssuedAt:function(e,s,t,i){e.state!==n.NOMATCH&&e.state!==n.EMPTY||(i.error='Issued At missing or invalid Issued At prefex "Issued At: "')},fissuedAt:function(e,s,t,i){e.state===n.MATCH&&(i.fissuedAt=r.charsToString(s,t,e.phraseLength))},fexpirationTime:function(e,s,t,i){e.state===n.MATCH&&(i.fexpirationTime=r.charsToString(s,t,e.phraseLength))},fnotBefore:function(e,s,t,i){e.state===n.MATCH&&(i.fnotBefore=r.charsToString(s,t,e.phraseLength))},frequestId:function(e,s,t,i){e.state===n.MATCH?i.frequestId=r.charsToString(s,t,e.phraseLength):e.state===n.EMPTY&&(i.frequestId="")},fresources:function(e,s,t,i){e.state===n.ACTIVE&&(i.fresources=[])},fresource:function(e,s,t,i){e.state===n.MATCH&&i.fresources.push(r.charsToString(s,t,e.phraseLength).slice(2))},emptyStatement:function(e,s,t,i){e.state===n.MATCH&&(i.fstatement="")},noStatement:function(e,s,t,i){e.state===n.MATCH&&(i.fstatement=void 0)},actualStatement:function(e,s,t,i){e.state===n.MATCH&&(i.fstatement=r.charsToString(s,t,e.phraseLength))},URI:function(e,s,t,i){switch(e.state){case n.ACTIVE:i.errorslength=0;break;case n.MATCH:i.uri=r.charsToString(s,t,e.phraseLength);break;case n.EMPTY:e.state=n.NOMATCH,e.phraseLength=0}},scheme:function(e,s,t,i){if(e.state===n.MATCH)i.scheme=r.charsToString(s,t,e.phraseLength)},userinfo:function(e,s,t,i){if(e.state===n.MATCH)i.userinfo=r.charsToString(s,t,e.phraseLength-1)},host:function(e,s,t,i){switch(e.state){case n.ACTIVE:i.iplit=!1;break;case n.MATCH:i.iplit?i.host=r.charsToString(s,t+1,e.phraseLength-2):i.host=r.charsToString(s,t,e.phraseLength);break;case n.EMPTY:i.host=""}},ipLiteral:function(e,s,t,i){e.state===n.MATCH&&(i.iplit=!0)},port:function(e,s,t,i){let o=0,d="";switch(e.state){case n.MATCH:d=r.charsToString(s,t,e.phraseLength),o=parseInt(d),Number.isNaN(o)?(e.state=n.NOMATCH,e.phraseLength=0):i.port=o;break;case n.EMPTY:i.port=""}},pathAbempty:function(e,s,t,i){switch(e.state){case n.MATCH:i.path=r.charsToString(s,t,e.phraseLength);break;case n.EMPTY:i.path=""}},pathAbsolute:function(e,s,t,i){if(e.state===n.MATCH)i.path=r.charsToString(s,t,e.phraseLength)},pathRootless:function(e,s,t,i){if(e.state===n.MATCH)i.path=r.charsToString(s,t,e.phraseLength)},pathEmpty:function(e,s,t,i){switch(e.state){case n.MATCH:case n.NOMATCH:e.state=n.NOMATCH,e.phraseLength=0;case n.EMPTY:i.path=""}},query:function(e,s,t,i){switch(e.state){case n.MATCH:i.query=r.charsToString(s,t,e.phraseLength);break;case n.EMPTY:i.query=""}},fragment:function(e,s,t,i){switch(e.state){case n.MATCH:i.fragment=r.charsToString(s,t,e.phraseLength);break;case n.EMPTY:i.fragment=""}},ipv4:function(e,s,t,i){e.state===n.MATCH&&(i.ipv4=!0)},h16:function(e,s,t,i){e.state===n.MATCH&&(i.h16count+=1)},nodcolon:function(e,s,t,i){switch(e.state){case n.ACTIVE:i.h16count=0,i.ipv4=!1;break;case n.MATCH:i.ipv4?6===i.h16count?e.state=n.MATCH:(e.state=n.NOMATCH,e.phraseLength=0):8===i.h16count?e.state=n.MATCH:(e.state=n.NOMATCH,e.phraseLength=0)}},dcolon:function(e,s,t,i){switch(e.state){case n.ACTIVE:i.h16count=0,i.ipv4=!1;break;case n.MATCH:i.ipv4?i.h16count<6?e.state=n.MATCH:(e.state=n.NOMATCH,e.phraseLength=0):i.h16count<8?e.state=n.MATCH:(e.state=n.NOMATCH,e.phraseLength=0)}},decOctet:function(e,s,t,i){switch(e.state){case n.ACTIVE:i.octet=0;break;case n.MATCH:i.octet>255&&(e.state=n.NOMATCH,e.phraseLength=0)}},decDigit:function(e,s,t,i){if(e.state===n.MATCH)i.octet=10*i.octet+s[t]-48}};function a(e){if("string"!=typeof e||42!=e.length)throw new Error("toERC55: input must be hex string representing 20 bytes");const s=e.slice(2).toLowerCase(),t=u(s);let i,r="0x";for(let n=0;n<s.length;n++){if(i=s.charCodeAt(n),!(i>=48&&i<=57||i>=97&&i<=104))throw new Error(`toERC55: input address is not hex: ${e}`);parseInt(t[n],16)>=8?r+=s[n].toUpperCase():r+=s[n]}return r}function c(e){let s;try{return s=a(e),e===s}catch(e){return!1}}const p=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648];function h(e){for(let s=0;s<24;++s){const t=e[0]^e[10]^e[20]^e[30]^e[40],i=e[1]^e[11]^e[21]^e[31]^e[41],r=e[2]^e[12]^e[22]^e[32]^e[42],n=e[3]^e[13]^e[23]^e[33]^e[43],o=e[4]^e[14]^e[24]^e[34]^e[44],d=e[5]^e[15]^e[25]^e[35]^e[45],a=e[6]^e[16]^e[26]^e[36]^e[46],c=e[7]^e[17]^e[27]^e[37]^e[47],h=e[8]^e[18]^e[28]^e[38]^e[48],l=e[9]^e[19]^e[29]^e[39]^e[49];let u=h^(r<<1|n>>>31),m=l^(n<<1|r>>>31);const f=e[0]^u,y=e[1]^m,g=e[10]^u,x=e[11]^m,T=e[20]^u,w=e[21]^m,k=e[30]^u,b=e[31]^m,v=e[40]^u,A=e[41]^m;u=t^(o<<1|d>>>31),m=i^(d<<1|o>>>31);const I=e[2]^u,C=e[3]^m,M=e[12]^u,E=e[13]^m,B=e[22]^u,P=e[23]^m,L=e[32]^u,H=e[33]^m,S=e[42]^u,N=e[43]^m;u=r^(a<<1|c>>>31),m=n^(c<<1|a>>>31);const $=e[4]^u,R=e[5]^m,O=e[14]^u,q=e[15]^m,D=e[24]^u,z=e[25]^m,U=e[34]^u,Y=e[35]^m,F=e[44]^u,V=e[45]^m;u=o^(h<<1|l>>>31),m=d^(l<<1|h>>>31);const G=e[6]^u,_=e[7]^m,j=e[16]^u,K=e[17]^m,Z=e[26]^u,X=e[27]^m,J=e[36]^u,Q=e[37]^m,W=e[46]^u,ee=e[47]^m;u=a^(t<<1|i>>>31),m=c^(i<<1|t>>>31);const se=e[8]^u,te=e[9]^m,ie=e[18]^u,re=e[19]^m,ne=e[28]^u,oe=e[29]^m,de=e[38]^u,ae=e[39]^m,ce=e[48]^u,pe=e[49]^m,he=f,le=y,ue=x<<4|g>>>28,me=g<<4|x>>>28,fe=T<<3|w>>>29,ye=w<<3|T>>>29,ge=b<<9|k>>>23,xe=k<<9|b>>>23,Te=v<<18|A>>>14,we=A<<18|v>>>14,ke=I<<1|C>>>31,be=C<<1|I>>>31,ve=E<<12|M>>>20,Ae=M<<12|E>>>20,Ie=B<<10|P>>>22,Ce=P<<10|B>>>22,Me=H<<13|L>>>19,Ee=L<<13|H>>>19,Be=S<<2|N>>>30,Pe=N<<2|S>>>30,Le=R<<30|$>>>2,He=$<<30|R>>>2,Se=O<<6|q>>>26,Ne=q<<6|O>>>26,$e=z<<11|D>>>21,Re=D<<11|z>>>21,Oe=U<<15|Y>>>17,qe=Y<<15|U>>>17,De=V<<29|F>>>3,ze=F<<29|V>>>3,Ue=G<<28|_>>>4,Ye=_<<28|G>>>4,Fe=K<<23|j>>>9,Ve=j<<23|K>>>9,Ge=Z<<25|X>>>7,_e=X<<25|Z>>>7,je=J<<21|Q>>>11,Ke=Q<<21|J>>>11,Ze=ee<<24|W>>>8,Xe=W<<24|ee>>>8,Je=se<<27|te>>>5,Qe=te<<27|se>>>5,We=ie<<20|re>>>12,es=re<<20|ie>>>12,ss=oe<<7|ne>>>25,ts=ne<<7|oe>>>25,is=de<<8|ae>>>24,rs=ae<<8|de>>>24,ns=ce<<14|pe>>>18,os=pe<<14|ce>>>18;e[0]=he^~ve&$e,e[1]=le^~Ae&Re,e[10]=Ue^~We&fe,e[11]=Ye^~es&ye,e[20]=ke^~Se&Ge,e[21]=be^~Ne&_e,e[30]=Je^~ue&Ie,e[31]=Qe^~me&Ce,e[40]=Le^~Fe&ss,e[41]=He^~Ve&ts,e[2]=ve^~$e&je,e[3]=Ae^~Re&Ke,e[12]=We^~fe&Me,e[13]=es^~ye&Ee,e[22]=Se^~Ge&is,e[23]=Ne^~_e&rs,e[32]=ue^~Ie&Oe,e[33]=me^~Ce&qe,e[42]=Fe^~ss&ge,e[43]=Ve^~ts&xe,e[4]=$e^~je&ns,e[5]=Re^~Ke&os,e[14]=fe^~Me&De,e[15]=ye^~Ee&ze,e[24]=Ge^~is&Te,e[25]=_e^~rs&we,e[34]=Ie^~Oe&Ze,e[35]=Ce^~qe&Xe,e[44]=ss^~ge&Be,e[45]=ts^~xe&Pe,e[6]=je^~ns&he,e[7]=Ke^~os&le,e[16]=Me^~De&Ue,e[17]=Ee^~ze&Ye,e[26]=is^~Te&ke,e[27]=rs^~we&be,e[36]=Oe^~Ze&Je,e[37]=qe^~Xe&Qe,e[46]=ge^~Be&Le,e[47]=xe^~Pe&He,e[8]=ns^~he&ve,e[9]=os^~le&Ae,e[18]=De^~Ue&We,e[19]=ze^~Ye&es,e[28]=Te^~ke&Se,e[29]=we^~be&Ne,e[38]=Ze^~Je&ue,e[39]=Xe^~Qe&me,e[48]=Be^~Le&Fe,e[49]=Pe^~He&Ve,e[0]^=p[2*s],e[1]^=p[2*s+1]}}function l(){this.state=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.blockSize=null,this.count=0,this.squeezing=!1}function u(e){if("string"!=typeof e)throw new Error("keccak256: input must be string of ASCII-only characters");const s=new Uint8Array([...e].map((e=>e.codePointAt(0))));for(let e=0;e<s.length;e++)if(s[e]>127)throw new Error(`keccak256: input must be string of ASCII-only characters: found character code ${s[e]} at offset ${e}`);const t=new l;return t.initialize(1088,512),t.absorb(s),function(e){let s="";for(let t=0;t<e.length;t++){let i=e[t].toString(16);1===i.length&&(s+="0"),s+=i}return s}(t.squeeze(32))}return l.prototype.initialize=function(e,s){for(let e=0;e<50;++e)this.state[e]=0;this.blockSize=e/8,this.count=0,this.squeezing=!1},l.prototype.absorb=function(e){for(let s=0;s<e.length;++s)this.state[~~(this.count/4)]^=e[s]<<this.count%4*8,this.count+=1,this.count===this.blockSize&&(h(this.state),this.count=0)},l.prototype.absorbLastFewBits=function(e){this.state[~~(this.count/4)]^=e<<this.count%4*8,128&e&&this.count===this.blockSize-1&&h(this.state),this.state[~~((this.blockSize-1)/4)]^=128<<(this.blockSize-1)%4*8,h(this.state),this.count=0,this.squeezing=!0},l.prototype.squeeze=function(e){this.squeezing||this.absorbLastFewBits(1);const s=new Uint8Array(e);for(let t=0;t<e;++t)s[t]=this.state[~~(this.count/4)]>>>this.count%4*8&255,this.count+=1,this.count===this.blockSize&&(h(this.state),this.count=0);return s},l.prototype.copy=function(e){for(let s=0;s<50;++s)e.state[s]=this.state[s];e.blockSize=this.blockSize,e.count=this.count,e.squeezing=this.squeezing},new function(){this.parseSiweMessage=e,this.siweObjectToString=t,this.isUri=s,this.keccak256=u,this.isERC55=c,this.toERC55=a,this.noConflict=()=>(delete _ps,this)}}();